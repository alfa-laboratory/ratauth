@startuml
Client -> AuthServer: authorize (login(some identifier),\npassword(optional),client_id,\n aud, scope(optional))
AuthServer -> AuthServer: defineAuthProvider
AuthServer -> AuthProvider: checkCredentials
AuthServer <- AuthProvider: checkCredentials
AuthServer -> AuthServer: checkAuds
alt authProvider provides authCode
 Client <-- AuthProvider: authCode(email, sms, etc.)
else authServer providers authCode
 AuthServer -> AuthServer: createAuthEntry
 Client <-- AuthServer: authCode
end
Client -> RP: authorize(authCode)
AuthServer <- RP : (authCode, client_id, client_secret, grant_type, response_type)
alt authProvider provides authCode
 AuthServer -> AuthProvider: checkAuthCode
 AuthServer <-- AuthProvider: checkAuthCodeResult
 AuthServer -> AuthServer: createAuthEntry
else authServer providers authCode
 AuthServer -> AuthServer: checkAuthCode
end
AuthServer -> AuthServer: checkRPcredentials
AuthServer -> AuthServer: createTokens
AuthServer --> RP: tokens (idToken, token, refreshToken)
@enduml
